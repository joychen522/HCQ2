//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCQ2_Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HCQ2Entities : DbContext
    {
        public HCQ2Entities()
             : base("name="+HCQ2_Common.SQL.SqlHelper.VirtualPath)
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<A01> A01 { get; set; }
        public virtual DbSet<A02> A02 { get; set; }
        public virtual DbSet<A03> A03 { get; set; }
        public virtual DbSet<A04> A04 { get; set; }
        public virtual DbSet<A19> A19 { get; set; }
        public virtual DbSet<ATTACHJOB> ATTACHJOB { get; set; }
        public virtual DbSet<Auth_Define_DataScope> Auth_Define_DataScope { get; set; }
        public virtual DbSet<Auth_Define_DataScopeItem> Auth_Define_DataScopeItem { get; set; }
        public virtual DbSet<Auth_Define_Func> Auth_Define_Func { get; set; }
        public virtual DbSet<Auth_Define_SetDB> Auth_Define_SetDB { get; set; }
        public virtual DbSet<Auth_Define_SetItem> Auth_Define_SetItem { get; set; }
        public virtual DbSet<Auth_Define_SetTable> Auth_Define_SetTable { get; set; }
        public virtual DbSet<Auth_OrgRole> Auth_OrgRole { get; set; }
        public virtual DbSet<Auth_Role> Auth_Role { get; set; }
        public virtual DbSet<Auth_SecretLogin> Auth_SecretLogin { get; set; }
        public virtual DbSet<Auth_User> Auth_User { get; set; }
        public virtual DbSet<Auth_UserGroup> Auth_UserGroup { get; set; }
        public virtual DbSet<Auth_UserGroupRole> Auth_UserGroupRole { get; set; }
        public virtual DbSet<Auth_UserLogon> Auth_UserLogon { get; set; }
        public virtual DbSet<Auth_UserRole> Auth_UserRole { get; set; }
        public virtual DbSet<Auth_UserWeixin> Auth_UserWeixin { get; set; }
        public virtual DbSet<B01> B01 { get; set; }
        public virtual DbSet<BB_CashDetail> BB_CashDetail { get; set; }
        public virtual DbSet<BB_DW> BB_DW { get; set; }
        public virtual DbSet<BB_DWLevel> BB_DWLevel { get; set; }
        public virtual DbSet<BB_DWLevelUser> BB_DWLevelUser { get; set; }
        public virtual DbSet<BB_DWState> BB_DWState { get; set; }
        public virtual DbSet<BB_DWStateCheckResult> BB_DWStateCheckResult { get; set; }
        public virtual DbSet<BB_DWTotal> BB_DWTotal { get; set; }
        public virtual DbSet<BB_FacilityPreserve> BB_FacilityPreserve { get; set; }
        public virtual DbSet<BB_FetchFC> BB_FetchFC { get; set; }
        public virtual DbSet<BB_FetchPoolLog> BB_FetchPoolLog { get; set; }
        public virtual DbSet<BB_InternalReciveLog> BB_InternalReciveLog { get; set; }
        public virtual DbSet<BB_InternalSend> BB_InternalSend { get; set; }
        public virtual DbSet<BB_ItemPreserve> BB_ItemPreserve { get; set; }
        public virtual DbSet<BB_PactDetailFlie> BB_PactDetailFlie { get; set; }
        public virtual DbSet<BB_ServiceUser> BB_ServiceUser { get; set; }
        public virtual DbSet<BB_SJ_DataSpecial> BB_SJ_DataSpecial { get; set; }
        public virtual DbSet<BB_SJ_NoteFloat> BB_SJ_NoteFloat { get; set; }
        public virtual DbSet<BB_SJ_NoteText> BB_SJ_NoteText { get; set; }
        public virtual DbSet<BB_TB> BB_TB { get; set; }
        public virtual DbSet<BB_TBClass> BB_TBClass { get; set; }
        public virtual DbSet<BB_TBDataHint> BB_TBDataHint { get; set; }
        public virtual DbSet<BB_TBItems> BB_TBItems { get; set; }
        public virtual DbSet<BB_TBRemarkUserLevel> BB_TBRemarkUserLevel { get; set; }
        public virtual DbSet<BB_TBRemarkUsers> BB_TBRemarkUsers { get; set; }
        public virtual DbSet<BB_TotalFC> BB_TotalFC { get; set; }
        public virtual DbSet<BB_TrackRecord> BB_TrackRecord { get; set; }
        public virtual DbSet<BB_Type> BB_Type { get; set; }
        public virtual DbSet<BB_TypeCycle> BB_TypeCycle { get; set; }
        public virtual DbSet<BB_UpDataLog> BB_UpDataLog { get; set; }
        public virtual DbSet<BB_ZB> BB_ZB { get; set; }
        public virtual DbSet<BB_ZBCondition> BB_ZBCondition { get; set; }
        public virtual DbSet<BB_ZBVarItems> BB_ZBVarItems { get; set; }
        public virtual DbSet<BMQ_Document> BMQ_Document { get; set; }
        public virtual DbSet<BPM_AgencyRule> BPM_AgencyRule { get; set; }
        public virtual DbSet<BPM_D_AskForLeaveDemo_Main> BPM_D_AskForLeaveDemo_Main { get; set; }
        public virtual DbSet<BPM_D_Leave_Main> BPM_D_Leave_Main { get; set; }
        public virtual DbSet<BPM_D_NewEmployees_Main> BPM_D_NewEmployees_Main { get; set; }
        public virtual DbSet<BPM_Define_ActionListener> BPM_Define_ActionListener { get; set; }
        public virtual DbSet<BPM_Define_ActorAdapter> BPM_Define_ActorAdapter { get; set; }
        public virtual DbSet<BPM_Define_Catalog> BPM_Define_Catalog { get; set; }
        public virtual DbSet<BPM_Define_Const> BPM_Define_Const { get; set; }
        public virtual DbSet<BPM_Define_DataModel> BPM_Define_DataModel { get; set; }
        public virtual DbSet<BPM_Define_Form> BPM_Define_Form { get; set; }
        public virtual DbSet<BPM_Define_Package> BPM_Define_Package { get; set; }
        public virtual DbSet<BPM_Define_ProcessDraft> BPM_Define_ProcessDraft { get; set; }
        public virtual DbSet<BPM_Define_ProcessPublished> BPM_Define_ProcessPublished { get; set; }
        public virtual DbSet<BPM_Define_Scheme> BPM_Define_Scheme { get; set; }
        public virtual DbSet<BPM_Run_Instance> BPM_Run_Instance { get; set; }
        public virtual DbSet<BPM_Run_ProcessLog> BPM_Run_ProcessLog { get; set; }
        public virtual DbSet<BPM_Run_SchemeJob> BPM_Run_SchemeJob { get; set; }
        public virtual DbSet<BPM_Run_SharedTask> BPM_Run_SharedTask { get; set; }
        public virtual DbSet<BPM_Run_Tracking> BPM_Run_Tracking { get; set; }
        public virtual DbSet<BPM_Run_Urged> BPM_Run_Urged { get; set; }
        public virtual DbSet<BPM_Run_WorkTask> BPM_Run_WorkTask { get; set; }
        public virtual DbSet<BPM_Run_WorkTaskOpinion> BPM_Run_WorkTaskOpinion { get; set; }
        public virtual DbSet<BPM_UserExtInfo> BPM_UserExtInfo { get; set; }
        public virtual DbSet<BPM_UsuallyOpinion> BPM_UsuallyOpinion { get; set; }
        public virtual DbSet<Cache_BlobInfo> Cache_BlobInfo { get; set; }
        public virtual DbSet<Cache_StatData> Cache_StatData { get; set; }
        public virtual DbSet<Com_Catalog> Com_Catalog { get; set; }
        public virtual DbSet<Com_Formula> Com_Formula { get; set; }
        public virtual DbSet<Com_JetTableItems> Com_JetTableItems { get; set; }
        public virtual DbSet<Com_JetTableMain> Com_JetTableMain { get; set; }
        public virtual DbSet<Com_LimitItems> Com_LimitItems { get; set; }
        public virtual DbSet<Com_LimitMain> Com_LimitMain { get; set; }
        public virtual DbSet<Com_MusterSimple> Com_MusterSimple { get; set; }
        public virtual DbSet<Com_MusterSimpleFields> Com_MusterSimpleFields { get; set; }
        public virtual DbSet<Com_RelationBody> Com_RelationBody { get; set; }
        public virtual DbSet<Com_RelationMain> Com_RelationMain { get; set; }
        public virtual DbSet<Com_SortItems> Com_SortItems { get; set; }
        public virtual DbSet<Com_SortMain> Com_SortMain { get; set; }
        public virtual DbSet<Com_StatAnalysisItems> Com_StatAnalysisItems { get; set; }
        public virtual DbSet<Com_StatAnalysisMain> Com_StatAnalysisMain { get; set; }
        public virtual DbSet<Com_StatLimitColumns> Com_StatLimitColumns { get; set; }
        public virtual DbSet<Com_StatLimitMain> Com_StatLimitMain { get; set; }
        public virtual DbSet<Com_StatLimitRows> Com_StatLimitRows { get; set; }
        public virtual DbSet<G01> G01 { get; set; }
        public virtual DbSet<HR_MusterFields> HR_MusterFields { get; set; }
        public virtual DbSet<HR_MusterMain> HR_MusterMain { get; set; }
        public virtual DbSet<OP_ExcelForm_Args> OP_ExcelForm_Args { get; set; }
        public virtual DbSet<OP_ExcelForm_Catalog> OP_ExcelForm_Catalog { get; set; }
        public virtual DbSet<OP_ExcelForm_Cell> OP_ExcelForm_Cell { get; set; }
        public virtual DbSet<OP_ExcelForm_Col> OP_ExcelForm_Col { get; set; }
        public virtual DbSet<OP_ExcelForm_DataSource> OP_ExcelForm_DataSource { get; set; }
        public virtual DbSet<OP_ExcelForm_DataSourceParse> OP_ExcelForm_DataSourceParse { get; set; }
        public virtual DbSet<OP_ExcelForm_Input> OP_ExcelForm_Input { get; set; }
        public virtual DbSet<OP_ExcelForm_InputTable> OP_ExcelForm_InputTable { get; set; }
        public virtual DbSet<OP_ExcelForm_InputTableField> OP_ExcelForm_InputTableField { get; set; }
        public virtual DbSet<OP_ExcelForm_Main> OP_ExcelForm_Main { get; set; }
        public virtual DbSet<OP_ExcelForm_Privilege> OP_ExcelForm_Privilege { get; set; }
        public virtual DbSet<OP_ExcelForm_Row> OP_ExcelForm_Row { get; set; }
        public virtual DbSet<OP_ExcelForm_RowCol> OP_ExcelForm_RowCol { get; set; }
        public virtual DbSet<Project_LogApi> Project_LogApi { get; set; }
        public virtual DbSet<RC_DataHint> RC_DataHint { get; set; }
        public virtual DbSet<RC_DataHintState> RC_DataHintState { get; set; }
        public virtual DbSet<RC_DataLimit> RC_DataLimit { get; set; }
        public virtual DbSet<RC_ImportClientDataWay> RC_ImportClientDataWay { get; set; }
        public virtual DbSet<RC_InfoScript> RC_InfoScript { get; set; }
        public virtual DbSet<RC_InfoScriptOrder> RC_InfoScriptOrder { get; set; }
        public virtual DbSet<RC_JTMain> RC_JTMain { get; set; }
        public virtual DbSet<RC_MusterMain> RC_MusterMain { get; set; }
        public virtual DbSet<RC_PolicyAttach> RC_PolicyAttach { get; set; }
        public virtual DbSet<RC_PolicyDetail> RC_PolicyDetail { get; set; }
        public virtual DbSet<RC_PolicyGroup> RC_PolicyGroup { get; set; }
        public virtual DbSet<RC_SearchContainerResult> RC_SearchContainerResult { get; set; }
        public virtual DbSet<RC_StatMain> RC_StatMain { get; set; }
        public virtual DbSet<RC_StatMusterField> RC_StatMusterField { get; set; }
        public virtual DbSet<SM_CodeItems> SM_CodeItems { get; set; }
        public virtual DbSet<SM_CodeTable> SM_CodeTable { get; set; }
        public virtual DbSet<SM_CodeTableGroup> SM_CodeTableGroup { get; set; }
        public virtual DbSet<SM_ConsoleUIGroup> SM_ConsoleUIGroup { get; set; }
        public virtual DbSet<SM_ConsoleUIItem> SM_ConsoleUIItem { get; set; }
        public virtual DbSet<SM_ConsoleUIWay> SM_ConsoleUIWay { get; set; }
        public virtual DbSet<SM_ConsoleUIWayRole> SM_ConsoleUIWayRole { get; set; }
        public virtual DbSet<SM_DBConnection> SM_DBConnection { get; set; }
        public virtual DbSet<SM_GlobalScript> SM_GlobalScript { get; set; }
        public virtual DbSet<SM_Identity> SM_Identity { get; set; }
        public virtual DbSet<SM_LogSystem> SM_LogSystem { get; set; }
        public virtual DbSet<SM_PersonClass> SM_PersonClass { get; set; }
        public virtual DbSet<SM_Plugin> SM_Plugin { get; set; }
        public virtual DbSet<SM_Prototype_Simple> SM_Prototype_Simple { get; set; }
        public virtual DbSet<SM_PY> SM_PY { get; set; }
        public virtual DbSet<SM_Scheduler> SM_Scheduler { get; set; }
        public virtual DbSet<SM_SchedulerNotify> SM_SchedulerNotify { get; set; }
        public virtual DbSet<SM_SchedulerPlan> SM_SchedulerPlan { get; set; }
        public virtual DbSet<SM_SchedulerRunLog> SM_SchedulerRunLog { get; set; }
        public virtual DbSet<SM_SchedulerTask> SM_SchedulerTask { get; set; }
        public virtual DbSet<SM_SequenceManage> SM_SequenceManage { get; set; }
        public virtual DbSet<SM_SetDB> SM_SetDB { get; set; }
        public virtual DbSet<SM_SetItemCalc> SM_SetItemCalc { get; set; }
        public virtual DbSet<SM_SetItems> SM_SetItems { get; set; }
        public virtual DbSet<SM_SetItemUserConfig> SM_SetItemUserConfig { get; set; }
        public virtual DbSet<SM_SetTable> SM_SetTable { get; set; }
        public virtual DbSet<SM_SetTableUserConfig> SM_SetTableUserConfig { get; set; }
        public virtual DbSet<SM_SetWayUserConfig> SM_SetWayUserConfig { get; set; }
        public virtual DbSet<SM_SqlTemplet_Args> SM_SqlTemplet_Args { get; set; }
        public virtual DbSet<SM_SqlTemplet_Catalog> SM_SqlTemplet_Catalog { get; set; }
        public virtual DbSet<SM_SqlTemplet_Main> SM_SqlTemplet_Main { get; set; }
        public virtual DbSet<SM_SystemKeyValue> SM_SystemKeyValue { get; set; }
        public virtual DbSet<SM_SystemMessage> SM_SystemMessage { get; set; }
        public virtual DbSet<SM_SystemModuleKeyFile> SM_SystemModuleKeyFile { get; set; }
        public virtual DbSet<SM_SystemModuleKeyValue> SM_SystemModuleKeyValue { get; set; }
        public virtual DbSet<SM_Theme_ConfigV2> SM_Theme_ConfigV2 { get; set; }
        public virtual DbSet<SM_Theme_ConfigV2_File> SM_Theme_ConfigV2_File { get; set; }
        public virtual DbSet<SM_Theme_ConfigV2_Role> SM_Theme_ConfigV2_Role { get; set; }
        public virtual DbSet<SM_Todo_DataWarn> SM_Todo_DataWarn { get; set; }
        public virtual DbSet<SM_Todo_Notice> SM_Todo_Notice { get; set; }
        public virtual DbSet<SM_UserKeyValue> SM_UserKeyValue { get; set; }
        public virtual DbSet<SM_UserKeyValueEx> SM_UserKeyValueEx { get; set; }
        public virtual DbSet<SM_UserRelation> SM_UserRelation { get; set; }
        public virtual DbSet<SM_UserRelationItem> SM_UserRelationItem { get; set; }
        public virtual DbSet<SM_Weixin_SystemConfig> SM_Weixin_SystemConfig { get; set; }
        public virtual DbSet<SM_WidgetHomepage_Main> SM_WidgetHomepage_Main { get; set; }
        public virtual DbSet<SM_WidgetHomepage_UserConfig> SM_WidgetHomepage_UserConfig { get; set; }
        public virtual DbSet<SM_WidgetModule_Args> SM_WidgetModule_Args { get; set; }
        public virtual DbSet<SM_WidgetModule_Catalog> SM_WidgetModule_Catalog { get; set; }
        public virtual DbSet<SM_WidgetModule_Files> SM_WidgetModule_Files { get; set; }
        public virtual DbSet<SM_WidgetModule_Main> SM_WidgetModule_Main { get; set; }
        public virtual DbSet<SM_WidgetModule_ObjectConfig> SM_WidgetModule_ObjectConfig { get; set; }
        public virtual DbSet<SM_WidgetModule_Tool> SM_WidgetModule_Tool { get; set; }
        public virtual DbSet<SM_WidgetModule_ToolBar> SM_WidgetModule_ToolBar { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<T_AreaInfo> T_AreaInfo { get; set; }
        public virtual DbSet<T_AreaPermissRelation> T_AreaPermissRelation { get; set; }
        public virtual DbSet<T_AskManager> T_AskManager { get; set; }
        public virtual DbSet<T_B01PermissRelation> T_B01PermissRelation { get; set; }
        public virtual DbSet<T_Complaints> T_Complaints { get; set; }
        public virtual DbSet<T_CompProInfo> T_CompProInfo { get; set; }
        public virtual DbSet<T_DocFolderPermissRelation> T_DocFolderPermissRelation { get; set; }
        public virtual DbSet<T_DocumentFolder> T_DocumentFolder { get; set; }
        public virtual DbSet<T_DocumentFolderRelation> T_DocumentFolderRelation { get; set; }
        public virtual DbSet<T_DocumentInfo> T_DocumentInfo { get; set; }
        public virtual DbSet<T_DocumentSetType> T_DocumentSetType { get; set; }
        public virtual DbSet<T_ElementPermissRelation> T_ElementPermissRelation { get; set; }
        public virtual DbSet<T_EnterDetail> T_EnterDetail { get; set; }
        public virtual DbSet<T_Equipment> T_Equipment { get; set; }
        public virtual DbSet<T_ExceptionLog> T_ExceptionLog { get; set; }
        public virtual DbSet<T_FilePermissRelation> T_FilePermissRelation { get; set; }
        public virtual DbSet<T_FolderPermissRelation> T_FolderPermissRelation { get; set; }
        public virtual DbSet<T_Function> T_Function { get; set; }
        public virtual DbSet<T_Implement> T_Implement { get; set; }
        public virtual DbSet<T_ItemCode> T_ItemCode { get; set; }
        public virtual DbSet<T_ItemCodeMenum> T_ItemCodeMenum { get; set; }
        public virtual DbSet<T_JobResumeRelation> T_JobResumeRelation { get; set; }
        public virtual DbSet<T_LimitUser> T_LimitUser { get; set; }
        public virtual DbSet<T_Login> T_Login { get; set; }
        public virtual DbSet<T_LogSeting> T_LogSeting { get; set; }
        public virtual DbSet<T_LogSetingDetail> T_LogSetingDetail { get; set; }
        public virtual DbSet<T_MessageNotice> T_MessageNotice { get; set; }
        public virtual DbSet<T_ModulePermissRelation> T_ModulePermissRelation { get; set; }
        public virtual DbSet<T_Org_User> T_Org_User { get; set; }
        public virtual DbSet<T_OrgFolder> T_OrgFolder { get; set; }
        public virtual DbSet<T_OrgUserRelation> T_OrgUserRelation { get; set; }
        public virtual DbSet<T_PageElement> T_PageElement { get; set; }
        public virtual DbSet<T_PageFile> T_PageFile { get; set; }
        public virtual DbSet<T_PageFolder> T_PageFolder { get; set; }
        public virtual DbSet<T_PayAccount> T_PayAccount { get; set; }
        public virtual DbSet<T_PerFuncRelation> T_PerFuncRelation { get; set; }
        public virtual DbSet<T_PermissConfig> T_PermissConfig { get; set; }
        public virtual DbSet<T_Permissions> T_Permissions { get; set; }
        public virtual DbSet<T_Role> T_Role { get; set; }
        public virtual DbSet<T_RoleGroupRelation> T_RoleGroupRelation { get; set; }
        public virtual DbSet<T_RolePermissRelation> T_RolePermissRelation { get; set; }
        public virtual DbSet<T_SetMainPage> T_SetMainPage { get; set; }
        public virtual DbSet<T_Synchronous> T_Synchronous { get; set; }
        public virtual DbSet<T_SysModule> T_SysModule { get; set; }
        public virtual DbSet<T_Table> T_Table { get; set; }
        public virtual DbSet<T_TableField> T_TableField { get; set; }
        public virtual DbSet<T_TodoList> T_TodoList { get; set; }
        public virtual DbSet<T_User> T_User { get; set; }
        public virtual DbSet<T_UserGroup> T_UserGroup { get; set; }
        public virtual DbSet<T_UserGroupRelation> T_UserGroupRelation { get; set; }
        public virtual DbSet<T_UserRoleRelation> T_UserRoleRelation { get; set; }
        public virtual DbSet<T_UserUnitRelation> T_UserUnitRelation { get; set; }
        public virtual DbSet<T_UseWorker> T_UseWorker { get; set; }
        public virtual DbSet<WF_JobMain> WF_JobMain { get; set; }
        public virtual DbSet<WF_JobMainExcludeChoose> WF_JobMainExcludeChoose { get; set; }
        public virtual DbSet<WF_JobOpinion> WF_JobOpinion { get; set; }
        public virtual DbSet<WF_JobProxy> WF_JobProxy { get; set; }
        public virtual DbSet<WF_JobSaveOrg> WF_JobSaveOrg { get; set; }
        public virtual DbSet<WF_JobStep> WF_JobStep { get; set; }
        public virtual DbSet<WF_OperationCalc> WF_OperationCalc { get; set; }
        public virtual DbSet<WF_OperationGroup> WF_OperationGroup { get; set; }
        public virtual DbSet<WF_OperationKeyValue> WF_OperationKeyValue { get; set; }
        public virtual DbSet<WF_OperationMain> WF_OperationMain { get; set; }
        public virtual DbSet<WF_OperationOutPut> WF_OperationOutPut { get; set; }
        public virtual DbSet<WF_OperationSalaryOPItem> WF_OperationSalaryOPItem { get; set; }
        public virtual DbSet<WF_OperationSalaryOPMain> WF_OperationSalaryOPMain { get; set; }
        public virtual DbSet<WF_OperationSalaryOPSignItem> WF_OperationSalaryOPSignItem { get; set; }
        public virtual DbSet<WF_OperationSalaryOPSignMain> WF_OperationSalaryOPSignMain { get; set; }
        public virtual DbSet<WF_OperationSetItems> WF_OperationSetItems { get; set; }
        public virtual DbSet<WF_OperationSetTable> WF_OperationSetTable { get; set; }
        public virtual DbSet<WF_OperationSTCodeItems> WF_OperationSTCodeItems { get; set; }
        public virtual DbSet<WF_OperationStep> WF_OperationStep { get; set; }
        public virtual DbSet<WF_OperationStepPrivilege> WF_OperationStepPrivilege { get; set; }
        public virtual DbSet<WF_OperationSTMain> WF_OperationSTMain { get; set; }
        public virtual DbSet<WF_OperationSTSetItems> WF_OperationSTSetItems { get; set; }
        public virtual DbSet<WF_OperationType> WF_OperationType { get; set; }
        public virtual DbSet<WGJG_GRZX> WGJG_GRZX { get; set; }
        public virtual DbSet<WGJG_WarnData> WGJG_WarnData { get; set; }
        public virtual DbSet<WGJG_ZX> WGJG_ZX { get; set; }
        public virtual DbSet<WGJG01> WGJG01 { get; set; }
        public virtual DbSet<WGJG01_Template> WGJG01_Template { get; set; }
        public virtual DbSet<WGJG02> WGJG02 { get; set; }
        public virtual DbSet<WGJG02_Template> WGJG02_Template { get; set; }
        public virtual DbSet<XS_Student> XS_Student { get; set; }
        public virtual DbSet<XS_StudentScore> XS_StudentScore { get; set; }
        public virtual DbSet<Auth_Permission> Auth_Permission { get; set; }
        public virtual DbSet<Auth_PermissionScope> Auth_PermissionScope { get; set; }
        public virtual DbSet<BB_FetchDataSetup> BB_FetchDataSetup { get; set; }
        public virtual DbSet<BB_FetchNumberFunc> BB_FetchNumberFunc { get; set; }
        public virtual DbSet<BPM_AgencyRuleAssignee> BPM_AgencyRuleAssignee { get; set; }
        public virtual DbSet<BPM_AgencyRuleProcess> BPM_AgencyRuleProcess { get; set; }
        public virtual DbSet<BPM_Define_ActorAdapter_bak> BPM_Define_ActorAdapter_bak { get; set; }
        public virtual DbSet<BPM_Run_Variable> BPM_Run_Variable { get; set; }
        public virtual DbSet<SM_Log> SM_Log { get; set; }
        public virtual DbSet<SM_LogCycleTimer> SM_LogCycleTimer { get; set; }
        public virtual DbSet<SM_LogDevelop> SM_LogDevelop { get; set; }
        public virtual DbSet<SM_Stamp_Unit> SM_Stamp_Unit { get; set; }
        public virtual DbSet<SM_Stamp_UnitUser> SM_Stamp_UnitUser { get; set; }
        public virtual DbSet<SM_UserOnlineLogger> SM_UserOnlineLogger { get; set; }
        public virtual DbSet<SM_Version> SM_Version { get; set; }
        public virtual DbSet<WF_OperationDocument> WF_OperationDocument { get; set; }
        public virtual DbSet<WF_OperationSetItemOption> WF_OperationSetItemOption { get; set; }
        public virtual DbSet<WF_OperationSetTableOption> WF_OperationSetTableOption { get; set; }
        public virtual DbSet<WF_OperationSTData> WF_OperationSTData { get; set; }
        public virtual DbSet<V_Auth_Per_00001_System_BPM_Start> V_Auth_Per_00001_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_00001_System_Operation_Start> V_Auth_Per_00001_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_00001_System_Org_Tree> V_Auth_Per_00001_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_00001_System_Person_Readwrite> V_Auth_Per_00001_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_00001_System_PersonClass> V_Auth_Per_00001_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_00002_System_BPM_Start> V_Auth_Per_00002_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_00002_System_Operation_Start> V_Auth_Per_00002_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_00002_System_Org_Tree> V_Auth_Per_00002_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_00002_System_Person_Readwrite> V_Auth_Per_00002_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_00002_System_PersonClass> V_Auth_Per_00002_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_anonymous_System_BPM_Start> V_Auth_Per_anonymous_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_anonymous_System_Operation_Start> V_Auth_Per_anonymous_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_anonymous_System_Org_Tree> V_Auth_Per_anonymous_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_anonymous_System_Person_Readwrite> V_Auth_Per_anonymous_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_anonymous_System_PersonClass> V_Auth_Per_anonymous_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000B_System_BPM_Start> V_Auth_Per_U00000B_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000B_System_Operation_Start> V_Auth_Per_U00000B_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000B_System_Org_Tree> V_Auth_Per_U00000B_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000B_System_Person_Readwrite> V_Auth_Per_U00000B_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000B_System_PersonClass> V_Auth_Per_U00000B_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000C_System_BPM_Start> V_Auth_Per_U00000C_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000C_System_Operation_Start> V_Auth_Per_U00000C_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000C_System_Org_Tree> V_Auth_Per_U00000C_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000C_System_Person_Readwrite> V_Auth_Per_U00000C_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000C_System_PersonClass> V_Auth_Per_U00000C_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000D_System_BPM_Start> V_Auth_Per_U00000D_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000D_System_Operation_Start> V_Auth_Per_U00000D_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000D_System_Org_Tree> V_Auth_Per_U00000D_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000D_System_Person_Readwrite> V_Auth_Per_U00000D_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000D_System_PersonClass> V_Auth_Per_U00000D_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000E_System_BPM_Start> V_Auth_Per_U00000E_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000E_System_Operation_Start> V_Auth_Per_U00000E_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000E_System_Org_Tree> V_Auth_Per_U00000E_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000E_System_Person_Readwrite> V_Auth_Per_U00000E_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000E_System_PersonClass> V_Auth_Per_U00000E_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000F_System_BPM_Start> V_Auth_Per_U00000F_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000F_System_Operation_Start> V_Auth_Per_U00000F_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000F_System_Org_Tree> V_Auth_Per_U00000F_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000F_System_Person_Readwrite> V_Auth_Per_U00000F_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000F_System_PersonClass> V_Auth_Per_U00000F_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000G_System_BPM_Start> V_Auth_Per_U00000G_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000G_System_Operation_Start> V_Auth_Per_U00000G_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000G_System_Org_Tree> V_Auth_Per_U00000G_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000G_System_Person_Readwrite> V_Auth_Per_U00000G_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000G_System_PersonClass> V_Auth_Per_U00000G_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000I_System_BPM_Start> V_Auth_Per_U00000I_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000I_System_Operation_Start> V_Auth_Per_U00000I_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000I_System_Org_Tree> V_Auth_Per_U00000I_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000I_System_Person_Readwrite> V_Auth_Per_U00000I_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000I_System_PersonClass> V_Auth_Per_U00000I_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000J_System_BPM_Start> V_Auth_Per_U00000J_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000J_System_Operation_Start> V_Auth_Per_U00000J_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000J_System_Org_Tree> V_Auth_Per_U00000J_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000J_System_Person_Readwrite> V_Auth_Per_U00000J_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000J_System_PersonClass> V_Auth_Per_U00000J_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000K_System_BPM_Start> V_Auth_Per_U00000K_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000K_System_Operation_Start> V_Auth_Per_U00000K_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000K_System_Org_Tree> V_Auth_Per_U00000K_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000K_System_Person_Readwrite> V_Auth_Per_U00000K_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000K_System_PersonClass> V_Auth_Per_U00000K_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000L_System_BPM_Start> V_Auth_Per_U00000L_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000L_System_Operation_Start> V_Auth_Per_U00000L_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000L_System_Org_Tree> V_Auth_Per_U00000L_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000L_System_Person_Readwrite> V_Auth_Per_U00000L_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000L_System_PersonClass> V_Auth_Per_U00000L_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000M_System_BPM_Start> V_Auth_Per_U00000M_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000M_System_Operation_Start> V_Auth_Per_U00000M_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000M_System_Org_Tree> V_Auth_Per_U00000M_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000M_System_Person_Readwrite> V_Auth_Per_U00000M_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000M_System_PersonClass> V_Auth_Per_U00000M_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000O_System_BPM_Start> V_Auth_Per_U00000O_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000O_System_Operation_Start> V_Auth_Per_U00000O_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000O_System_Org_Tree> V_Auth_Per_U00000O_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000O_System_Person_Readwrite> V_Auth_Per_U00000O_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000O_System_PersonClass> V_Auth_Per_U00000O_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000P_System_BPM_Start> V_Auth_Per_U00000P_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000P_System_Operation_Start> V_Auth_Per_U00000P_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000P_System_Org_Tree> V_Auth_Per_U00000P_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000P_System_Person_Readwrite> V_Auth_Per_U00000P_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000P_System_PersonClass> V_Auth_Per_U00000P_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000R_System_BPM_Start> V_Auth_Per_U00000R_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000R_System_Operation_Start> V_Auth_Per_U00000R_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000R_System_Org_Tree> V_Auth_Per_U00000R_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000R_System_Person_Readwrite> V_Auth_Per_U00000R_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000R_System_PersonClass> V_Auth_Per_U00000R_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000S_System_BPM_Start> V_Auth_Per_U00000S_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000S_System_Operation_Start> V_Auth_Per_U00000S_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000S_System_Org_Tree> V_Auth_Per_U00000S_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000S_System_Person_Readwrite> V_Auth_Per_U00000S_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000S_System_PersonClass> V_Auth_Per_U00000S_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000T_System_BPM_Start> V_Auth_Per_U00000T_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000T_System_Operation_Start> V_Auth_Per_U00000T_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000T_System_Org_Tree> V_Auth_Per_U00000T_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000T_System_Person_Readwrite> V_Auth_Per_U00000T_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000T_System_PersonClass> V_Auth_Per_U00000T_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000U_System_BPM_Start> V_Auth_Per_U00000U_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000U_System_Operation_Start> V_Auth_Per_U00000U_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000U_System_Org_Tree> V_Auth_Per_U00000U_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000U_System_Person_Readwrite> V_Auth_Per_U00000U_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000U_System_PersonClass> V_Auth_Per_U00000U_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000V_System_BPM_Start> V_Auth_Per_U00000V_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000V_System_Operation_Start> V_Auth_Per_U00000V_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000V_System_Org_Tree> V_Auth_Per_U00000V_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000V_System_Person_Readwrite> V_Auth_Per_U00000V_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000V_System_PersonClass> V_Auth_Per_U00000V_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000X_System_BPM_Start> V_Auth_Per_U00000X_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000X_System_Operation_Start> V_Auth_Per_U00000X_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000X_System_Org_Tree> V_Auth_Per_U00000X_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000X_System_Person_Readwrite> V_Auth_Per_U00000X_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000X_System_PersonClass> V_Auth_Per_U00000X_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Y_System_BPM_Start> V_Auth_Per_U00000Y_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Y_System_Operation_Start> V_Auth_Per_U00000Y_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Y_System_Org_Tree> V_Auth_Per_U00000Y_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Y_System_Person_Readwrite> V_Auth_Per_U00000Y_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Y_System_PersonClass> V_Auth_Per_U00000Y_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Z_System_BPM_Start> V_Auth_Per_U00000Z_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Z_System_Operation_Start> V_Auth_Per_U00000Z_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Z_System_Org_Tree> V_Auth_Per_U00000Z_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Z_System_Person_Readwrite> V_Auth_Per_U00000Z_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U00000Z_System_PersonClass> V_Auth_Per_U00000Z_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U000010_System_BPM_Start> V_Auth_Per_U000010_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000010_System_Operation_Start> V_Auth_Per_U000010_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000010_System_Org_Tree> V_Auth_Per_U000010_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U000010_System_Person_Readwrite> V_Auth_Per_U000010_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U000010_System_PersonClass> V_Auth_Per_U000010_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U000011_System_BPM_Start> V_Auth_Per_U000011_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000011_System_Operation_Start> V_Auth_Per_U000011_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000011_System_Org_Tree> V_Auth_Per_U000011_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U000011_System_Person_Readwrite> V_Auth_Per_U000011_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U000011_System_PersonClass> V_Auth_Per_U000011_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U000012_System_BPM_Start> V_Auth_Per_U000012_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000012_System_Operation_Start> V_Auth_Per_U000012_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000012_System_Org_Tree> V_Auth_Per_U000012_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U000012_System_Person_Readwrite> V_Auth_Per_U000012_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U000012_System_PersonClass> V_Auth_Per_U000012_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U000014_System_BPM_Start> V_Auth_Per_U000014_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000014_System_Operation_Start> V_Auth_Per_U000014_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000014_System_Org_Tree> V_Auth_Per_U000014_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U000014_System_Person_Readwrite> V_Auth_Per_U000014_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U000014_System_PersonClass> V_Auth_Per_U000014_System_PersonClass { get; set; }
        public virtual DbSet<V_Auth_Per_U000015_System_BPM_Start> V_Auth_Per_U000015_System_BPM_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000015_System_Operation_Start> V_Auth_Per_U000015_System_Operation_Start { get; set; }
        public virtual DbSet<V_Auth_Per_U000015_System_Org_Tree> V_Auth_Per_U000015_System_Org_Tree { get; set; }
        public virtual DbSet<V_Auth_Per_U000015_System_Person_Readwrite> V_Auth_Per_U000015_System_Person_Readwrite { get; set; }
        public virtual DbSet<V_Auth_Per_U000015_System_PersonClass> V_Auth_Per_U000015_System_PersonClass { get; set; }
        public virtual DbSet<V_My_WidgetModule_Objects> V_My_WidgetModule_Objects { get; set; }
        public virtual DbSet<View_A02> View_A02 { get; set; }
        public virtual DbSet<View_Auth_User> View_Auth_User { get; set; }
        public virtual DbSet<View_CatalogDocument> View_CatalogDocument { get; set; }
        public virtual DbSet<View_Com_JetTableItems> View_Com_JetTableItems { get; set; }
        public virtual DbSet<View_QXTJ> View_QXTJ { get; set; }
    
        [DbFunction("HCQ2Entities", "FN_WGJG_GetAllCatalogIDs")]
        public virtual IQueryable<FN_WGJG_GetAllCatalogIDs_Result> FN_WGJG_GetAllCatalogIDs(string catalogModule, string selCatalogID)
        {
            var catalogModuleParameter = catalogModule != null ?
                new ObjectParameter("CatalogModule", catalogModule) :
                new ObjectParameter("CatalogModule", typeof(string));
    
            var selCatalogIDParameter = selCatalogID != null ?
                new ObjectParameter("selCatalogID", selCatalogID) :
                new ObjectParameter("selCatalogID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_WGJG_GetAllCatalogIDs_Result>("[HCQ2Entities].[FN_WGJG_GetAllCatalogIDs](@CatalogModule, @selCatalogID)", catalogModuleParameter, selCatalogIDParameter);
        }
    
        [DbFunction("HCQ2Entities", "My_Code_Parent_All")]
        public virtual IQueryable<My_Code_Parent_All_Result> My_Code_Parent_All(string codeID, string codeItemID)
        {
            var codeIDParameter = codeID != null ?
                new ObjectParameter("CodeID", codeID) :
                new ObjectParameter("CodeID", typeof(string));
    
            var codeItemIDParameter = codeItemID != null ?
                new ObjectParameter("CodeItemID", codeItemID) :
                new ObjectParameter("CodeItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<My_Code_Parent_All_Result>("[HCQ2Entities].[My_Code_Parent_All](@CodeID, @CodeItemID)", codeIDParameter, codeItemIDParameter);
        }
    
        [DbFunction("HCQ2Entities", "My_FN_Auth_GetRoleUser")]
        public virtual IQueryable<My_FN_Auth_GetRoleUser_Result> My_FN_Auth_GetRoleUser(string roleID)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<My_FN_Auth_GetRoleUser_Result>("[HCQ2Entities].[My_FN_Auth_GetRoleUser](@RoleID)", roleIDParameter);
        }
    
        [DbFunction("HCQ2Entities", "My_Org_Parent_All")]
        public virtual IQueryable<My_Org_Parent_All_Result> My_Org_Parent_All(string orgID)
        {
            var orgIDParameter = orgID != null ?
                new ObjectParameter("OrgID", orgID) :
                new ObjectParameter("OrgID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<My_Org_Parent_All_Result>("[HCQ2Entities].[My_Org_Parent_All](@OrgID)", orgIDParameter);
        }
    
        [DbFunction("HCQ2Entities", "My_WidgetModule_Catalog_Parent_All")]
        public virtual IQueryable<My_WidgetModule_Catalog_Parent_All_Result> My_WidgetModule_Catalog_Parent_All(string catalogID)
        {
            var catalogIDParameter = catalogID != null ?
                new ObjectParameter("CatalogID", catalogID) :
                new ObjectParameter("CatalogID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<My_WidgetModule_Catalog_Parent_All_Result>("[HCQ2Entities].[My_WidgetModule_Catalog_Parent_All](@CatalogID)", catalogIDParameter);
        }
    
        public virtual int App_Person_Register(string orgid, string name, string sex, string nation, Nullable<System.DateTime> birthday, string address, string cardno, string police, Nullable<System.DateTime> userLifeBegin, Nullable<System.DateTime> userLifeEnd, byte[] photo, string irisData)
        {
            var orgidParameter = orgid != null ?
                new ObjectParameter("Orgid", orgid) :
                new ObjectParameter("Orgid", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var nationParameter = nation != null ?
                new ObjectParameter("Nation", nation) :
                new ObjectParameter("Nation", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cardnoParameter = cardno != null ?
                new ObjectParameter("Cardno", cardno) :
                new ObjectParameter("Cardno", typeof(string));
    
            var policeParameter = police != null ?
                new ObjectParameter("Police", police) :
                new ObjectParameter("Police", typeof(string));
    
            var userLifeBeginParameter = userLifeBegin.HasValue ?
                new ObjectParameter("UserLifeBegin", userLifeBegin) :
                new ObjectParameter("UserLifeBegin", typeof(System.DateTime));
    
            var userLifeEndParameter = userLifeEnd.HasValue ?
                new ObjectParameter("UserLifeEnd", userLifeEnd) :
                new ObjectParameter("UserLifeEnd", typeof(System.DateTime));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(byte[]));
    
            var irisDataParameter = irisData != null ?
                new ObjectParameter("IrisData", irisData) :
                new ObjectParameter("IrisData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Person_Register", orgidParameter, nameParameter, sexParameter, nationParameter, birthdayParameter, addressParameter, cardnoParameter, policeParameter, userLifeBeginParameter, userLifeEndParameter, photoParameter, irisDataParameter);
        }
    
        public virtual ObjectResult<App_person_salary_sign_Result> App_person_salary_sign(string personid, Nullable<System.DateTime> signtime, string salarymonth)
        {
            var personidParameter = personid != null ?
                new ObjectParameter("Personid", personid) :
                new ObjectParameter("Personid", typeof(string));
    
            var signtimeParameter = signtime.HasValue ?
                new ObjectParameter("Signtime", signtime) :
                new ObjectParameter("Signtime", typeof(System.DateTime));
    
            var salarymonthParameter = salarymonth != null ?
                new ObjectParameter("Salarymonth", salarymonth) :
                new ObjectParameter("Salarymonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_person_salary_sign_Result>("App_person_salary_sign", personidParameter, signtimeParameter, salarymonthParameter);
        }
    
        public virtual ObjectResult<App_person_work_sign_Result> App_person_work_sign(string personid, Nullable<System.DateTime> signtime)
        {
            var personidParameter = personid != null ?
                new ObjectParameter("Personid", personid) :
                new ObjectParameter("Personid", typeof(string));
    
            var signtimeParameter = signtime.HasValue ?
                new ObjectParameter("Signtime", signtime) :
                new ObjectParameter("Signtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_person_work_sign_Result>("App_person_work_sign", personidParameter, signtimeParameter);
        }
    
        public virtual int GS_Develop_BackupDB(string baseDir)
        {
            var baseDirParameter = baseDir != null ?
                new ObjectParameter("BaseDir", baseDir) :
                new ObjectParameter("BaseDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_Develop_BackupDB", baseDirParameter);
        }
    
        public virtual ObjectResult<GS_Develop_SystemFieldHelper_Result> GS_Develop_SystemFieldHelper(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GS_Develop_SystemFieldHelper_Result>("GS_Develop_SystemFieldHelper", tableNameParameter);
        }
    
        public virtual int GS_SMBatProcessRecord(Nullable<int> mainDB, string tableID, string sWhere, Nullable<int> sMode, string jobID, Nullable<int> config)
        {
            var mainDBParameter = mainDB.HasValue ?
                new ObjectParameter("MainDB", mainDB) :
                new ObjectParameter("MainDB", typeof(int));
    
            var tableIDParameter = tableID != null ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(string));
    
            var sWhereParameter = sWhere != null ?
                new ObjectParameter("SWhere", sWhere) :
                new ObjectParameter("SWhere", typeof(string));
    
            var sModeParameter = sMode.HasValue ?
                new ObjectParameter("SMode", sMode) :
                new ObjectParameter("SMode", typeof(int));
    
            var jobIDParameter = jobID != null ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(string));
    
            var configParameter = config.HasValue ?
                new ObjectParameter("Config", config) :
                new ObjectParameter("Config", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMBatProcessRecord", mainDBParameter, tableIDParameter, sWhereParameter, sModeParameter, jobIDParameter, configParameter);
        }
    
        public virtual int GS_SMCheckDropTable(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMCheckDropTable", tableNameParameter);
        }
    
        public virtual int GS_SMCodeItemsMove(string codeID, string codeItemID, Nullable<int> moveOption)
        {
            var codeIDParameter = codeID != null ?
                new ObjectParameter("CodeID", codeID) :
                new ObjectParameter("CodeID", typeof(string));
    
            var codeItemIDParameter = codeItemID != null ?
                new ObjectParameter("CodeItemID", codeItemID) :
                new ObjectParameter("CodeItemID", typeof(string));
    
            var moveOptionParameter = moveOption.HasValue ?
                new ObjectParameter("MoveOption", moveOption) :
                new ObjectParameter("MoveOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMCodeItemsMove", codeIDParameter, codeItemIDParameter, moveOptionParameter);
        }
    
        public virtual int GS_SMGetDataAsPage(Nullable<int> startRowIndex, Nullable<int> maximumRows, string selectKeySQL, string selectDataSQL)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var selectKeySQLParameter = selectKeySQL != null ?
                new ObjectParameter("SelectKeySQL", selectKeySQL) :
                new ObjectParameter("SelectKeySQL", typeof(string));
    
            var selectDataSQLParameter = selectDataSQL != null ?
                new ObjectParameter("SelectDataSQL", selectDataSQL) :
                new ObjectParameter("SelectDataSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMGetDataAsPage", startRowIndexParameter, maximumRowsParameter, selectKeySQLParameter, selectDataSQLParameter);
        }
    
        public virtual int GS_SMGetSQLValueInt(string cmd, ObjectParameter retValue)
        {
            var cmdParameter = cmd != null ?
                new ObjectParameter("Cmd", cmd) :
                new ObjectParameter("Cmd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMGetSQLValueInt", cmdParameter, retValue);
        }
    
        public virtual int GS_SMGetSQLValueStr(string cmd, ObjectParameter retValue)
        {
            var cmdParameter = cmd != null ?
                new ObjectParameter("Cmd", cmd) :
                new ObjectParameter("Cmd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMGetSQLValueStr", cmdParameter, retValue);
        }
    
        public virtual int GS_SMIsTableExist(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMIsTableExist", tableNameParameter);
        }
    
        public virtual int GS_SMSelectItemHistory(Nullable<int> mainDB, string tableID, string resultExpr, string sType, Nullable<int> sIndex, string condition, string childCondition, string declareTable, string returnTable, Nullable<int> config, string jobID, Nullable<short> isDebug)
        {
            var mainDBParameter = mainDB.HasValue ?
                new ObjectParameter("MainDB", mainDB) :
                new ObjectParameter("MainDB", typeof(int));
    
            var tableIDParameter = tableID != null ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(string));
    
            var resultExprParameter = resultExpr != null ?
                new ObjectParameter("ResultExpr", resultExpr) :
                new ObjectParameter("ResultExpr", typeof(string));
    
            var sTypeParameter = sType != null ?
                new ObjectParameter("SType", sType) :
                new ObjectParameter("SType", typeof(string));
    
            var sIndexParameter = sIndex.HasValue ?
                new ObjectParameter("SIndex", sIndex) :
                new ObjectParameter("SIndex", typeof(int));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(string));
    
            var childConditionParameter = childCondition != null ?
                new ObjectParameter("ChildCondition", childCondition) :
                new ObjectParameter("ChildCondition", typeof(string));
    
            var declareTableParameter = declareTable != null ?
                new ObjectParameter("DeclareTable", declareTable) :
                new ObjectParameter("DeclareTable", typeof(string));
    
            var returnTableParameter = returnTable != null ?
                new ObjectParameter("ReturnTable", returnTable) :
                new ObjectParameter("ReturnTable", typeof(string));
    
            var configParameter = config.HasValue ?
                new ObjectParameter("Config", config) :
                new ObjectParameter("Config", typeof(int));
    
            var jobIDParameter = jobID != null ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(string));
    
            var isDebugParameter = isDebug.HasValue ?
                new ObjectParameter("IsDebug", isDebug) :
                new ObjectParameter("IsDebug", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMSelectItemHistory", mainDBParameter, tableIDParameter, resultExprParameter, sTypeParameter, sIndexParameter, conditionParameter, childConditionParameter, declareTableParameter, returnTableParameter, configParameter, jobIDParameter, isDebugParameter);
        }
    
        public virtual int GS_SMSelectItemHistoryList(Nullable<int> mainDB, string tableID, string resultExpr, string sType, Nullable<int> sIndex, Nullable<int> sIndex2, string condition, string childCondition, string declareTable, string returnTable, string splitChar, Nullable<short> isDescOrder, Nullable<int> config, string jobID, Nullable<short> isDebug)
        {
            var mainDBParameter = mainDB.HasValue ?
                new ObjectParameter("MainDB", mainDB) :
                new ObjectParameter("MainDB", typeof(int));
    
            var tableIDParameter = tableID != null ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(string));
    
            var resultExprParameter = resultExpr != null ?
                new ObjectParameter("ResultExpr", resultExpr) :
                new ObjectParameter("ResultExpr", typeof(string));
    
            var sTypeParameter = sType != null ?
                new ObjectParameter("SType", sType) :
                new ObjectParameter("SType", typeof(string));
    
            var sIndexParameter = sIndex.HasValue ?
                new ObjectParameter("SIndex", sIndex) :
                new ObjectParameter("SIndex", typeof(int));
    
            var sIndex2Parameter = sIndex2.HasValue ?
                new ObjectParameter("SIndex2", sIndex2) :
                new ObjectParameter("SIndex2", typeof(int));
    
            var conditionParameter = condition != null ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(string));
    
            var childConditionParameter = childCondition != null ?
                new ObjectParameter("ChildCondition", childCondition) :
                new ObjectParameter("ChildCondition", typeof(string));
    
            var declareTableParameter = declareTable != null ?
                new ObjectParameter("DeclareTable", declareTable) :
                new ObjectParameter("DeclareTable", typeof(string));
    
            var returnTableParameter = returnTable != null ?
                new ObjectParameter("ReturnTable", returnTable) :
                new ObjectParameter("ReturnTable", typeof(string));
    
            var splitCharParameter = splitChar != null ?
                new ObjectParameter("SplitChar", splitChar) :
                new ObjectParameter("SplitChar", typeof(string));
    
            var isDescOrderParameter = isDescOrder.HasValue ?
                new ObjectParameter("IsDescOrder", isDescOrder) :
                new ObjectParameter("IsDescOrder", typeof(short));
    
            var configParameter = config.HasValue ?
                new ObjectParameter("Config", config) :
                new ObjectParameter("Config", typeof(int));
    
            var jobIDParameter = jobID != null ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(string));
    
            var isDebugParameter = isDebug.HasValue ?
                new ObjectParameter("IsDebug", isDebug) :
                new ObjectParameter("IsDebug", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMSelectItemHistoryList", mainDBParameter, tableIDParameter, resultExprParameter, sTypeParameter, sIndexParameter, sIndex2Parameter, conditionParameter, childConditionParameter, declareTableParameter, returnTableParameter, splitCharParameter, isDescOrderParameter, configParameter, jobIDParameter, isDebugParameter);
        }
    
        public virtual ObjectResult<string> GS_SMSelectSetHistoryMerger(Nullable<int> mainDB, string setID, string keyID, string resultExpr, string childCondition, Nullable<int> isAsc, Nullable<int> rowMaxLength, Nullable<int> preCharLength)
        {
            var mainDBParameter = mainDB.HasValue ?
                new ObjectParameter("MainDB", mainDB) :
                new ObjectParameter("MainDB", typeof(int));
    
            var setIDParameter = setID != null ?
                new ObjectParameter("SetID", setID) :
                new ObjectParameter("SetID", typeof(string));
    
            var keyIDParameter = keyID != null ?
                new ObjectParameter("KeyID", keyID) :
                new ObjectParameter("KeyID", typeof(string));
    
            var resultExprParameter = resultExpr != null ?
                new ObjectParameter("ResultExpr", resultExpr) :
                new ObjectParameter("ResultExpr", typeof(string));
    
            var childConditionParameter = childCondition != null ?
                new ObjectParameter("ChildCondition", childCondition) :
                new ObjectParameter("ChildCondition", typeof(string));
    
            var isAscParameter = isAsc.HasValue ?
                new ObjectParameter("IsAsc", isAsc) :
                new ObjectParameter("IsAsc", typeof(int));
    
            var rowMaxLengthParameter = rowMaxLength.HasValue ?
                new ObjectParameter("RowMaxLength", rowMaxLength) :
                new ObjectParameter("RowMaxLength", typeof(int));
    
            var preCharLengthParameter = preCharLength.HasValue ?
                new ObjectParameter("PreCharLength", preCharLength) :
                new ObjectParameter("PreCharLength", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GS_SMSelectSetHistoryMerger", mainDBParameter, setIDParameter, keyIDParameter, resultExprParameter, childConditionParameter, isAscParameter, rowMaxLengthParameter, preCharLengthParameter);
        }
    
        public virtual int GS_SMSelectSetHistoryMerger2(Nullable<int> mainDB, string setID, string keyID, string resultExpr, string childCondition, Nullable<int> isAsc, Nullable<int> columnBreakChars, Nullable<int> preCharLength, string resultInsertSql)
        {
            var mainDBParameter = mainDB.HasValue ?
                new ObjectParameter("MainDB", mainDB) :
                new ObjectParameter("MainDB", typeof(int));
    
            var setIDParameter = setID != null ?
                new ObjectParameter("SetID", setID) :
                new ObjectParameter("SetID", typeof(string));
    
            var keyIDParameter = keyID != null ?
                new ObjectParameter("KeyID", keyID) :
                new ObjectParameter("KeyID", typeof(string));
    
            var resultExprParameter = resultExpr != null ?
                new ObjectParameter("ResultExpr", resultExpr) :
                new ObjectParameter("ResultExpr", typeof(string));
    
            var childConditionParameter = childCondition != null ?
                new ObjectParameter("ChildCondition", childCondition) :
                new ObjectParameter("ChildCondition", typeof(string));
    
            var isAscParameter = isAsc.HasValue ?
                new ObjectParameter("IsAsc", isAsc) :
                new ObjectParameter("IsAsc", typeof(int));
    
            var columnBreakCharsParameter = columnBreakChars.HasValue ?
                new ObjectParameter("ColumnBreakChars", columnBreakChars) :
                new ObjectParameter("ColumnBreakChars", typeof(int));
    
            var preCharLengthParameter = preCharLength.HasValue ?
                new ObjectParameter("PreCharLength", preCharLength) :
                new ObjectParameter("PreCharLength", typeof(int));
    
            var resultInsertSqlParameter = resultInsertSql != null ?
                new ObjectParameter("ResultInsertSql", resultInsertSql) :
                new ObjectParameter("ResultInsertSql", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMSelectSetHistoryMerger2", mainDBParameter, setIDParameter, keyIDParameter, resultExprParameter, childConditionParameter, isAscParameter, columnBreakCharsParameter, preCharLengthParameter, resultInsertSqlParameter);
        }
    
        public virtual int GS_SMStatPersonCount(string codeID, string parentStr, string whereStr)
        {
            var codeIDParameter = codeID != null ?
                new ObjectParameter("CodeID", codeID) :
                new ObjectParameter("CodeID", typeof(string));
    
            var parentStrParameter = parentStr != null ?
                new ObjectParameter("ParentStr", parentStr) :
                new ObjectParameter("ParentStr", typeof(string));
    
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_SMStatPersonCount", codeIDParameter, parentStrParameter, whereStrParameter);
        }
    
        public virtual int GS_WFHistoryList(string whereStr, Nullable<int> startRowIndex, Nullable<int> maximumRows, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFHistoryList", whereStrParameter, startRowIndexParameter, maximumRowsParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int GS_WFHistoryListCount(string whereStr, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFHistoryListCount", whereStrParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int GS_WFJobList(string whereStr, Nullable<int> startRowIndex, Nullable<int> maximumRows, Nullable<int> jobState, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var jobStateParameter = jobState.HasValue ?
                new ObjectParameter("JobState", jobState) :
                new ObjectParameter("JobState", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFJobList", whereStrParameter, startRowIndexParameter, maximumRowsParameter, jobStateParameter, typeIDParameter);
        }
    
        public virtual int GS_WFJobListCount(string whereStr, Nullable<int> jobState, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var jobStateParameter = jobState.HasValue ?
                new ObjectParameter("JobState", jobState) :
                new ObjectParameter("JobState", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFJobListCount", whereStrParameter, jobStateParameter, typeIDParameter);
        }
    
        public virtual int GS_WFOperationBatAppendPerson(string userID, string customTable, string pClassID, string whereStr)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var customTableParameter = customTable != null ?
                new ObjectParameter("CustomTable", customTable) :
                new ObjectParameter("CustomTable", typeof(string));
    
            var pClassIDParameter = pClassID != null ?
                new ObjectParameter("PClassID", pClassID) :
                new ObjectParameter("PClassID", typeof(string));
    
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFOperationBatAppendPerson", userIDParameter, customTableParameter, pClassIDParameter, whereStrParameter);
        }
    
        public virtual int GS_WFPendingList(string whereStr, Nullable<int> startRowIndex, Nullable<int> maximumRows, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFPendingList", whereStrParameter, startRowIndexParameter, maximumRowsParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int GS_WFPendingListCount(string whereStr, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFPendingListCount", whereStrParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int GS_WFPendingListDistinctOper(string whereStr, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFPendingListDistinctOper", whereStrParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int GS_WFProcessingList(string whereStr, Nullable<int> startRowIndex, Nullable<int> maximumRows, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFProcessingList", whereStrParameter, startRowIndexParameter, maximumRowsParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int GS_WFProcessingListCount(string whereStr, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GS_WFProcessingListCount", whereStrParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual ObjectResult<My_Auth_AppendUserRole_Result> My_Auth_AppendUserRole(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<My_Auth_AppendUserRole_Result>("My_Auth_AppendUserRole", userIDParameter);
        }
    
        public virtual ObjectResult<string> My_Auth_GetRoleUser(string roleID)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("My_Auth_GetRoleUser", roleIDParameter);
        }
    
        public virtual int My_Auth_SyncUserAndPerson(string whereExpr)
        {
            var whereExprParameter = whereExpr != null ?
                new ObjectParameter("WhereExpr", whereExpr) :
                new ObjectParameter("WhereExpr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_Auth_SyncUserAndPerson", whereExprParameter);
        }
    
        public virtual ObjectResult<My_BPM_GetRoleUsersOfOu_Result> My_BPM_GetRoleUsersOfOu(string roleID, string oU)
        {
            var roleIDParameter = roleID != null ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(string));
    
            var oUParameter = oU != null ?
                new ObjectParameter("OU", oU) :
                new ObjectParameter("OU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<My_BPM_GetRoleUsersOfOu_Result>("My_BPM_GetRoleUsersOfOu", roleIDParameter, oUParameter);
        }
    
        public virtual int MY_HR_KQ_IORecord_Machine_Reader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MY_HR_KQ_IORecord_Machine_Reader");
        }
    
        public virtual int My_HR_KQ_Shift_Person_Insert(string startDate, string endDate, string orgID, string userID)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var orgIDParameter = orgID != null ?
                new ObjectParameter("OrgID", orgID) :
                new ObjectParameter("OrgID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_HR_KQ_Shift_Person_Insert", startDateParameter, endDateParameter, orgIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<My_SM_SystemMessage_SelectUnNotify_Result> My_SM_SystemMessage_SelectUnNotify(string reciveUserID, Nullable<int> topValue)
        {
            var reciveUserIDParameter = reciveUserID != null ?
                new ObjectParameter("ReciveUserID", reciveUserID) :
                new ObjectParameter("ReciveUserID", typeof(string));
    
            var topValueParameter = topValue.HasValue ?
                new ObjectParameter("TopValue", topValue) :
                new ObjectParameter("TopValue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<My_SM_SystemMessage_SelectUnNotify_Result>("My_SM_SystemMessage_SelectUnNotify", reciveUserIDParameter, topValueParameter);
        }
    
        public virtual int My_SM_SystemMessage_Send(string messageName, string messageContent, Nullable<int> messagePrior, string sendUserID, string reciveUserID, string relationActionName, string relationActionUrl, string relationActionConfig)
        {
            var messageNameParameter = messageName != null ?
                new ObjectParameter("MessageName", messageName) :
                new ObjectParameter("MessageName", typeof(string));
    
            var messageContentParameter = messageContent != null ?
                new ObjectParameter("MessageContent", messageContent) :
                new ObjectParameter("MessageContent", typeof(string));
    
            var messagePriorParameter = messagePrior.HasValue ?
                new ObjectParameter("MessagePrior", messagePrior) :
                new ObjectParameter("MessagePrior", typeof(int));
    
            var sendUserIDParameter = sendUserID != null ?
                new ObjectParameter("SendUserID", sendUserID) :
                new ObjectParameter("SendUserID", typeof(string));
    
            var reciveUserIDParameter = reciveUserID != null ?
                new ObjectParameter("ReciveUserID", reciveUserID) :
                new ObjectParameter("ReciveUserID", typeof(string));
    
            var relationActionNameParameter = relationActionName != null ?
                new ObjectParameter("RelationActionName", relationActionName) :
                new ObjectParameter("RelationActionName", typeof(string));
    
            var relationActionUrlParameter = relationActionUrl != null ?
                new ObjectParameter("RelationActionUrl", relationActionUrl) :
                new ObjectParameter("RelationActionUrl", typeof(string));
    
            var relationActionConfigParameter = relationActionConfig != null ?
                new ObjectParameter("RelationActionConfig", relationActionConfig) :
                new ObjectParameter("RelationActionConfig", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_SM_SystemMessage_Send", messageNameParameter, messageContentParameter, messagePriorParameter, sendUserIDParameter, reciveUserIDParameter, relationActionNameParameter, relationActionUrlParameter, relationActionConfigParameter);
        }
    
        public virtual int My_SM_TableAll_Update_ExtendedDescript()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_SM_TableAll_Update_ExtendedDescript");
        }
    
        public virtual int My_SM_TableColumn_Update_ExtendedDescript(string tableName, string columnName, string descript)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var descriptParameter = descript != null ?
                new ObjectParameter("Descript", descript) :
                new ObjectParameter("Descript", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_SM_TableColumn_Update_ExtendedDescript", tableNameParameter, columnNameParameter, descriptParameter);
        }
    
        public virtual int My_SM_TableColumns_Update_ExtendedDescript(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_SM_TableColumns_Update_ExtendedDescript", tableNameParameter);
        }
    
        public virtual int My_SMIdentity_Create(string identityName, string identityPrefix, string identitySuffix, Nullable<int> identityLength, Nullable<int> minValue, Nullable<int> incrementStep, Nullable<int> returnOnlyIdentity, ObjectParameter returnIdentityValue)
        {
            var identityNameParameter = identityName != null ?
                new ObjectParameter("IdentityName", identityName) :
                new ObjectParameter("IdentityName", typeof(string));
    
            var identityPrefixParameter = identityPrefix != null ?
                new ObjectParameter("IdentityPrefix", identityPrefix) :
                new ObjectParameter("IdentityPrefix", typeof(string));
    
            var identitySuffixParameter = identitySuffix != null ?
                new ObjectParameter("IdentitySuffix", identitySuffix) :
                new ObjectParameter("IdentitySuffix", typeof(string));
    
            var identityLengthParameter = identityLength.HasValue ?
                new ObjectParameter("IdentityLength", identityLength) :
                new ObjectParameter("IdentityLength", typeof(int));
    
            var minValueParameter = minValue.HasValue ?
                new ObjectParameter("MinValue", minValue) :
                new ObjectParameter("MinValue", typeof(int));
    
            var incrementStepParameter = incrementStep.HasValue ?
                new ObjectParameter("IncrementStep", incrementStep) :
                new ObjectParameter("IncrementStep", typeof(int));
    
            var returnOnlyIdentityParameter = returnOnlyIdentity.HasValue ?
                new ObjectParameter("ReturnOnlyIdentity", returnOnlyIdentity) :
                new ObjectParameter("ReturnOnlyIdentity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_SMIdentity_Create", identityNameParameter, identityPrefixParameter, identitySuffixParameter, identityLengthParameter, minValueParameter, incrementStepParameter, returnOnlyIdentityParameter, returnIdentityValue);
        }
    
        public virtual ObjectResult<string> My_SMIdentity_Create_Select(string identityName, string identityPrefix, string identitySuffix, Nullable<int> identityLength, Nullable<int> minValue, Nullable<int> returnOnlyIdentity, Nullable<int> incrementStep)
        {
            var identityNameParameter = identityName != null ?
                new ObjectParameter("IdentityName", identityName) :
                new ObjectParameter("IdentityName", typeof(string));
    
            var identityPrefixParameter = identityPrefix != null ?
                new ObjectParameter("IdentityPrefix", identityPrefix) :
                new ObjectParameter("IdentityPrefix", typeof(string));
    
            var identitySuffixParameter = identitySuffix != null ?
                new ObjectParameter("IdentitySuffix", identitySuffix) :
                new ObjectParameter("IdentitySuffix", typeof(string));
    
            var identityLengthParameter = identityLength.HasValue ?
                new ObjectParameter("IdentityLength", identityLength) :
                new ObjectParameter("IdentityLength", typeof(int));
    
            var minValueParameter = minValue.HasValue ?
                new ObjectParameter("MinValue", minValue) :
                new ObjectParameter("MinValue", typeof(int));
    
            var returnOnlyIdentityParameter = returnOnlyIdentity.HasValue ?
                new ObjectParameter("ReturnOnlyIdentity", returnOnlyIdentity) :
                new ObjectParameter("ReturnOnlyIdentity", typeof(int));
    
            var incrementStepParameter = incrementStep.HasValue ?
                new ObjectParameter("IncrementStep", incrementStep) :
                new ObjectParameter("IncrementStep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("My_SMIdentity_Create_Select", identityNameParameter, identityPrefixParameter, identitySuffixParameter, identityLengthParameter, minValueParameter, returnOnlyIdentityParameter, incrementStepParameter);
        }
    
        public virtual int My_WFHistoryList(string whereStr, Nullable<int> startRowIndex, Nullable<int> maximumRows, string userID, Nullable<int> typeID, Nullable<int> filterMode)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var filterModeParameter = filterMode.HasValue ?
                new ObjectParameter("FilterMode", filterMode) :
                new ObjectParameter("FilterMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFHistoryList", whereStrParameter, startRowIndexParameter, maximumRowsParameter, userIDParameter, typeIDParameter, filterModeParameter);
        }
    
        public virtual int My_WFHistoryListCount(string whereStr, string userID, Nullable<int> typeID, Nullable<int> filterMode)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var filterModeParameter = filterMode.HasValue ?
                new ObjectParameter("FilterMode", filterMode) :
                new ObjectParameter("FilterMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFHistoryListCount", whereStrParameter, userIDParameter, typeIDParameter, filterModeParameter);
        }
    
        public virtual int My_WFJobList(string whereStr, Nullable<int> startRowIndex, Nullable<int> maximumRows, Nullable<int> jobState, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var jobStateParameter = jobState.HasValue ?
                new ObjectParameter("JobState", jobState) :
                new ObjectParameter("JobState", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFJobList", whereStrParameter, startRowIndexParameter, maximumRowsParameter, jobStateParameter, typeIDParameter);
        }
    
        public virtual int My_WFJobListCount(string whereStr, Nullable<int> jobState, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var jobStateParameter = jobState.HasValue ?
                new ObjectParameter("JobState", jobState) :
                new ObjectParameter("JobState", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFJobListCount", whereStrParameter, jobStateParameter, typeIDParameter);
        }
    
        public virtual int My_WFJobOpinion_Insert(string operID, string jobID, Nullable<int> jobStepID, string auditUserID)
        {
            var operIDParameter = operID != null ?
                new ObjectParameter("OperID", operID) :
                new ObjectParameter("OperID", typeof(string));
    
            var jobIDParameter = jobID != null ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(string));
    
            var jobStepIDParameter = jobStepID.HasValue ?
                new ObjectParameter("JobStepID", jobStepID) :
                new ObjectParameter("JobStepID", typeof(int));
    
            var auditUserIDParameter = auditUserID != null ?
                new ObjectParameter("AuditUserID", auditUserID) :
                new ObjectParameter("AuditUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFJobOpinion_Insert", operIDParameter, jobIDParameter, jobStepIDParameter, auditUserIDParameter);
        }
    
        public virtual int My_WFPendingList(string whereStr, Nullable<int> startRowIndex, Nullable<int> maximumRows, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFPendingList", whereStrParameter, startRowIndexParameter, maximumRowsParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int My_WFPendingListCount(string whereStr, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFPendingListCount", whereStrParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int My_WFPendingListDistinctOper(string whereStr, string userID, Nullable<int> typeID)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFPendingListDistinctOper", whereStrParameter, userIDParameter, typeIDParameter);
        }
    
        public virtual int My_WFProcessingList(string whereStr, Nullable<int> startRowIndex, Nullable<int> maximumRows, string userID, Nullable<int> typeID, Nullable<int> filterMode)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("StartRowIndex", startRowIndex) :
                new ObjectParameter("StartRowIndex", typeof(int));
    
            var maximumRowsParameter = maximumRows.HasValue ?
                new ObjectParameter("MaximumRows", maximumRows) :
                new ObjectParameter("MaximumRows", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var filterModeParameter = filterMode.HasValue ?
                new ObjectParameter("FilterMode", filterMode) :
                new ObjectParameter("FilterMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFProcessingList", whereStrParameter, startRowIndexParameter, maximumRowsParameter, userIDParameter, typeIDParameter, filterModeParameter);
        }
    
        public virtual int My_WFProcessingListCount(string whereStr, string userID, Nullable<int> typeID, Nullable<int> filterMode)
        {
            var whereStrParameter = whereStr != null ?
                new ObjectParameter("WhereStr", whereStr) :
                new ObjectParameter("WhereStr", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var filterModeParameter = filterMode.HasValue ?
                new ObjectParameter("FilterMode", filterMode) :
                new ObjectParameter("FilterMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("My_WFProcessingListCount", whereStrParameter, userIDParameter, typeIDParameter, filterModeParameter);
        }
    
        public virtual int P_CreateDefault(string tableName, string column, string value)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var columnParameter = column != null ?
                new ObjectParameter("Column", column) :
                new ObjectParameter("Column", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreateDefault", tableNameParameter, columnParameter, valueParameter);
        }
    
        public virtual int P_CreateIndex(string tableName, string columns, Nullable<bool> unique, Nullable<bool> clustered)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var columnsParameter = columns != null ?
                new ObjectParameter("Columns", columns) :
                new ObjectParameter("Columns", typeof(string));
    
            var uniqueParameter = unique.HasValue ?
                new ObjectParameter("Unique", unique) :
                new ObjectParameter("Unique", typeof(bool));
    
            var clusteredParameter = clustered.HasValue ?
                new ObjectParameter("Clustered", clustered) :
                new ObjectParameter("Clustered", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreateIndex", tableNameParameter, columnsParameter, uniqueParameter, clusteredParameter);
        }
    
        public virtual int P_CreateTable(string tableName, string tableCName, string tableCols, Nullable<bool> drop)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var tableCNameParameter = tableCName != null ?
                new ObjectParameter("TableCName", tableCName) :
                new ObjectParameter("TableCName", typeof(string));
    
            var tableColsParameter = tableCols != null ?
                new ObjectParameter("TableCols", tableCols) :
                new ObjectParameter("TableCols", typeof(string));
    
            var dropParameter = drop.HasValue ?
                new ObjectParameter("Drop", drop) :
                new ObjectParameter("Drop", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreateTable", tableNameParameter, tableCNameParameter, tableColsParameter, dropParameter);
        }
    
        public virtual int P_GetQianXin_Detail(string danwei, string since, string to)
        {
            var danweiParameter = danwei != null ?
                new ObjectParameter("danwei", danwei) :
                new ObjectParameter("danwei", typeof(string));
    
            var sinceParameter = since != null ?
                new ObjectParameter("since", since) :
                new ObjectParameter("since", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_GetQianXin_Detail", danweiParameter, sinceParameter, toParameter);
        }
    
        public virtual int P_GetQianXin_ShiJian(string danwei, Nullable<int> since, Nullable<int> to)
        {
            var danweiParameter = danwei != null ?
                new ObjectParameter("danwei", danwei) :
                new ObjectParameter("danwei", typeof(string));
    
            var sinceParameter = since.HasValue ?
                new ObjectParameter("since", since) :
                new ObjectParameter("since", typeof(int));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_GetQianXin_ShiJian", danweiParameter, sinceParameter, toParameter);
        }
    
        public virtual ObjectResult<P_QianXin_JinE_Result> P_QianXin_JinE(string danwei, Nullable<System.DateTime> since, Nullable<System.DateTime> to)
        {
            var danweiParameter = danwei != null ?
                new ObjectParameter("danwei", danwei) :
                new ObjectParameter("danwei", typeof(string));
    
            var sinceParameter = since.HasValue ?
                new ObjectParameter("since", since) :
                new ObjectParameter("since", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_QianXin_JinE_Result>("P_QianXin_JinE", danweiParameter, sinceParameter, toParameter);
        }
    
        public virtual ObjectResult<P_QianXin_ShiJian_Result> P_QianXin_ShiJian(string danwei, Nullable<System.DateTime> since, Nullable<System.DateTime> to)
        {
            var danweiParameter = danwei != null ?
                new ObjectParameter("danwei", danwei) :
                new ObjectParameter("danwei", typeof(string));
    
            var sinceParameter = since.HasValue ?
                new ObjectParameter("since", since) :
                new ObjectParameter("since", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_QianXin_ShiJian_Result>("P_QianXin_ShiJian", danweiParameter, sinceParameter, toParameter);
        }
    
        public virtual int Pk_AutoGrantWage(string wGJG0107, string unitCode)
        {
            var wGJG0107Parameter = wGJG0107 != null ?
                new ObjectParameter("WGJG0107", wGJG0107) :
                new ObjectParameter("WGJG0107", typeof(string));
    
            var unitCodeParameter = unitCode != null ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pk_AutoGrantWage", wGJG0107Parameter, unitCodeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
